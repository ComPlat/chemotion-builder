diff --git a/src/allowed_origins.json b/src/allowed_origins.json
new file mode 100644
index 0000000..47ff792
--- /dev/null
+++ b/src/allowed_origins.json
@@ -0,0 +1,13 @@
+[
+    "https://nmrxiv.org",
+    "http://nmrxiv.org",
+    "http://localhost",
+    "http://localhost:3000",
+    "http://127.0.0.1:",
+    "http://127.0.0.1:3000",
+    "http://test.nmrxiv.org",
+    "http://193.196.39.168",
+    "http://193.196.39.168:3000",
+    "https://nodejsdev.nmrxiv.org",
+    "*"
+]
diff --git a/Dockerfile.prod b/Dockerfile.prod
index f35639a..a912122 100644
--- a/Dockerfile.prod
+++ b/Dockerfile.prod
@@ -4,10 +4,10 @@ WORKDIR /app
 ENV PATH /app/node_modules/.bin:$PATH
 COPY package.json ./
 COPY package-lock.json ./
+COPY . ./
 RUN export NODE_OPTIONS=--max-old-space-size=8192
 RUN npm ci --silent
 RUN npm install react-scripts@latest -g --silent
-COPY . ./
 RUN npm run build
 
 # production environment
@@ -15,4 +15,4 @@ FROM nginx:stable-alpine
 COPY --from=build /app/build /usr/share/nginx/html
 COPY nginx/nginx.conf /etc/nginx/conf.d/default.conf
 EXPOSE 80
-CMD ["nginx", "-g", "daemon off;"]
\ No newline at end of file
+CMD ["nginx", "-g", "daemon off;"]
diff --git a/src/events/event.ts b/src/events/event.ts
index 02d94fd..fd6724c 100644
--- a/src/events/event.ts
+++ b/src/events/event.ts
@@ -1,18 +1,7 @@
 import { EventType, EventData } from './types';
 import { isIPAddress } from '../utilities/isIPAddress';
 
-const ALLOWED_ORIGINS: string[] = [
-  'https://nmrxiv.org',
-  'http://nmrxiv.org',
-  'http://localhost',
-  'http://localhost:3000',
-  'http://127.0.0.1:',
-  'http://127.0.0.1:3000',
-  'http://test.nmrxiv.org',
-  'http://193.196.39.168',
-  'http://193.196.39.168:3000',
-  'https://nodejsdev.nmrxiv.org',
-];
+import ALLOWED_ORIGINS from '../allowed_origins.json';
 
 const namespace = 'nmr-wrapper';
 
@@ -47,7 +36,9 @@ function on<T extends EventType>(
       data: { type: targetType, data },
     } = event;
 
-    if (!ALLOWED_ORIGINS.includes(parseOrigin(origin))) {
+    const skipOriginCheck =
+      ALLOWED_ORIGINS.length == 0 || ALLOWED_ORIGINS.includes('*');
+    if (!skipOriginCheck && !ALLOWED_ORIGINS.includes(parseOrigin(origin))) {
       throw new Error(`Invalid Origin ${origin}`);
     }
 
