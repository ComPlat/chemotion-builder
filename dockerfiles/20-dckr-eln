####################################################################################################
# ELN
####################################################################################################
FROM base AS eln
ARG ELNDIR=./eln

# install system packages
RUN apt-get -y --autoremove --fix-missing install \
    libboost-serialization1.74.0 \
    libboost-iostreams1.74.0 \
    curl `# for pandoc` \
    postgresql-client \
    inkscape `# this installs python3` \
    xvfb \
    imagemagick \
    locales \
    make \
    vim

# add fontfix
COPY ${ELNDIR}/fonts.conf /etc/fonts/conf.d/99-chemotion-fontfix.conf

# install ruby + node + modules
COPY --from=ruby /ruby         /ruby
COPY --from=node /node         /node
COPY --from=node /node_modules /chemotion/app/node_modules
COPY --from=node /yarn/cache   /yarn/cache

# copy the app
COPY ${ELNDIR}/src                  /chemotion
COPY ${ELNDIR}/src/app/.version     /.version

# add yq, make sure to chmod +x it later.
ADD https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 /bin/yq

# pandoc.
ARG PANDOC_VERSION=2.10.1
ADD https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-1-amd64.deb /tmp/pandoc.deb

# cleanup and post-install steps
RUN dpkg -i /tmp/pandoc.deb && rm /tmp/pandoc.deb && \
    find /ruby/bin /node/bin -not -type d | xargs -i ln -s {} /bin/ && \
    ln -s /embed/bin/chemotion /bin/chemotion && \
    chmod +x /bin/yq && \
    chown -R root:root /chemotion && \
    yarn config set cache-folder /yarn/cache && \
    ( cd /chemotion/app/ && \
    echo '[]' > /chemotion/app/config/klasses.json && \
    RAILS_ENV=production SECRET_KEY_BASE=build \
    rake webpacker:compile && \
    rm /chemotion/app/config/klasses.json )

RUN cd /chemotion/app && RAILS_ENV=production SECRET_KEY_BASE=build && \
    cp $(bundle show ketcherails)/app/assets/javascripts/ketcherails/ui/ui.js.erb /tmp/ui.js.bak && \
    sed -i 's/Ketcherails::TemplateCategory.with_approved_templates.pluck(:id)/[]/g' $(bundle show ketcherails)/app/assets/javascripts/ketcherails/ui/ui.js.erb && \
    RAILS_ENV=production SECRET_KEY_BASE=build rake assets:precompile && \
    mv /tmp/ui.js.bak $(bundle show ketcherails)/app/assets/javascripts/ketcherails/ui/ui.js.erb

    # alternative: use the patch ...
    # sed -i -e '650,654d' $(bundle show ketcherails)/app/assets/javascripts/ketcherails/ui/ui.js.erb && \
    
# add the scripts
ADD ${ELNDIR}/embed /embed


# sanity checking
# RUN ruby -v && bundle -v && gem -v && rails -v && node -v && npm -v && npx -v && yarn -v

# check dependencies: this should be done in testing step
# RUN find /ruby/lib/ruby/gems/ /node/lib/node_modules -iname '*.so' -type f -exec /embed/bin/lddcheck \{\} \; | tee /lddlog.txt | grep not | grep -v libRD | sort | uniq

ENV TERM=xterm-256color
ENV RAILS_LOG_TO_STDOUT=1
ENV THOR_SILENCE_DEPRECATION=1
ENV PASSENGER_DOWNLOAD_NATIVE_SUPPORT_BINARY=0

# ENV DROP_UID=1000
# ENV DROP_GID=1000
# ENV CONFIG_FIX_PERMISSIONS_ON_STARTUP=true
# ENV CONFIG_ROLE=eln

# This requires patch 22
# ENV CONFIG_DISABLE_MAIL_DELIVERY=true

# the ELN uses this file to communicate that it is alive
# and the bgworker can start working. (Needs to be on a shared volume.)
ENV CONFIG_PIDFILE=/chemotion/app/tmp/eln.pid

ENV RAILS_ENV=production
ENV RAKE_ENV=production
ENV NODE_ENV=production
# this line is needed due to moving config folder around (where webpacks config .js files life)
# it avoids MODULE_NOT_FOUND errors during webpack compilation
ENV NODE_PATH=/chemotion/app/node_modules/
ENV NODE_OPTIONS=--max_old_space_size=4096

ENV BUNDLE_USER_HOME=/ruby/bundler

VOLUME /chemotion/app
VOLUME /chemotion/data

EXPOSE 4000

ENTRYPOINT ["/tini", "--"]
CMD /embed/run.sh
